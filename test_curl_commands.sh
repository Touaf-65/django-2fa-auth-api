#!/bin/bash
# Script de test avec cURL pour l'API Django 2FA Auth

BASE_URL="http://localhost:8000"
API_BASE="$BASE_URL/api/auth"

echo "üöÄ Tests de l'API Django 2FA Auth avec cURL"
echo "=============================================="

# Variables pour stocker les tokens
ACCESS_TOKEN=""
REFRESH_TOKEN=""
SECRET_KEY=""

# Fonction pour afficher les r√©ponses
print_response() {
    echo "üìã R√©ponse:"
    echo "$1" | jq '.' 2>/dev/null || echo "$1"
    echo ""
}

# Test 1: Inscription
echo "üß™ Test 1: Inscription d'un utilisateur"
echo "----------------------------------------"
REGISTRATION_RESPONSE=$(curl -s -X POST "$API_BASE/signup/" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "test@example.com",
    "password": "TestPassword123!",
    "confirm_password": "TestPassword123!",
    "first_name": "Test",
    "last_name": "User",
    "phone": "+1234567890",
    "language": "fr",
    "timezone": "Europe/Paris"
  }')

print_response "$REGISTRATION_RESPONSE"

# Extraire les tokens
ACCESS_TOKEN=$(echo "$REGISTRATION_RESPONSE" | jq -r '.tokens.access // empty')
REFRESH_TOKEN=$(echo "$REGISTRATION_RESPONSE" | jq -r '.tokens.refresh // empty')

if [ -n "$ACCESS_TOKEN" ]; then
    echo "‚úÖ Inscription r√©ussie! Token d'acc√®s r√©cup√©r√©."
else
    echo "‚ùå √âchec de l'inscription"
    exit 1
fi

# Test 2: R√©cup√©ration du profil
echo "üß™ Test 2: R√©cup√©ration du profil"
echo "----------------------------------"
PROFILE_RESPONSE=$(curl -s -X GET "$API_BASE/profile/" \
  -H "Authorization: Bearer $ACCESS_TOKEN")

print_response "$PROFILE_RESPONSE"

# Test 3: Mise √† jour du profil
echo "üß™ Test 3: Mise √† jour du profil"
echo "---------------------------------"
UPDATE_RESPONSE=$(curl -s -X PUT "$API_BASE/profile/update/" \
  -H "Authorization: Bearer $ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "first_name": "Test Updated",
    "language": "en",
    "timezone": "America/New_York"
  }')

print_response "$UPDATE_RESPONSE"

# Test 4: Configuration 2FA
echo "üß™ Test 4: Configuration 2FA"
echo "-----------------------------"
TWOFA_SETUP_RESPONSE=$(curl -s -X POST "$API_BASE/2fa/setup/" \
  -H "Authorization: Bearer $ACCESS_TOKEN")

print_response "$TWOFA_SETUP_RESPONSE"

# Extraire la cl√© secr√®te
SECRET_KEY=$(echo "$TWOFA_SETUP_RESPONSE" | jq -r '.setup_data.secret_key // empty')

if [ -n "$SECRET_KEY" ]; then
    echo "‚úÖ Configuration 2FA g√©n√©r√©e! Secret key: $SECRET_KEY"
else
    echo "‚ùå √âchec de la configuration 2FA"
fi

# Test 5: Statut 2FA
echo "üß™ Test 5: Statut 2FA"
echo "----------------------"
STATUS_RESPONSE=$(curl -s -X GET "$API_BASE/2fa/status/" \
  -H "Authorization: Bearer $ACCESS_TOKEN")

print_response "$STATUS_RESPONSE"

# Test 6: Rafra√Æchissement des tokens
echo "üß™ Test 6: Rafra√Æchissement des tokens"
echo "---------------------------------------"
REFRESH_RESPONSE=$(curl -s -X POST "$API_BASE/token/refresh/" \
  -H "Content-Type: application/json" \
  -d "{\"refresh\": \"$REFRESH_TOKEN\"}")

print_response "$REFRESH_RESPONSE"

# Extraire le nouveau token d'acc√®s
NEW_ACCESS_TOKEN=$(echo "$REFRESH_RESPONSE" | jq -r '.access // empty')

if [ -n "$NEW_ACCESS_TOKEN" ]; then
    echo "‚úÖ Tokens rafra√Æchis! Nouveau token d'acc√®s r√©cup√©r√©."
    ACCESS_TOKEN="$NEW_ACCESS_TOKEN"
else
    echo "‚ùå √âchec du rafra√Æchissement des tokens"
fi

# Test 7: Connexion
echo "üß™ Test 7: Connexion utilisateur"
echo "---------------------------------"
LOGIN_RESPONSE=$(curl -s -X POST "$API_BASE/signin/" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "test@example.com",
    "password": "TestPassword123!"
  }')

print_response "$LOGIN_RESPONSE"

# Test 8: D√©connexion
echo "üß™ Test 8: D√©connexion"
echo "-----------------------"
LOGOUT_RESPONSE=$(curl -s -X POST "$API_BASE/logout/" \
  -H "Authorization: Bearer $ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d "{\"refresh_token\": \"$REFRESH_TOKEN\"}")

print_response "$LOGOUT_RESPONSE"

echo "üèÅ Tests termin√©s!"
echo "=================="
echo "üìù Note: Pour tester la v√©rification 2FA, vous devez:"
echo "   1. Utiliser une application d'authentification (Google Authenticator, Authy)"
echo "   2. Scanner le QR code g√©n√©r√© lors de la configuration 2FA"
echo "   3. Utiliser le code TOTP g√©n√©r√© pour v√©rifier l'activation"
echo "   4. Tester la connexion avec 2FA activ√©"



