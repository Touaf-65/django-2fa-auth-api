# Generated by Django 4.2.24 on 2025-09-08 09:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="APIEndpoint",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("path", models.CharField(max_length=500, verbose_name="Chemin")),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("PATCH", "PATCH"),
                            ("DELETE", "DELETE"),
                            ("HEAD", "HEAD"),
                            ("OPTIONS", "OPTIONS"),
                        ],
                        max_length=10,
                        verbose_name="Méthode HTTP",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nom de l'endpoint"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("deprecated", "Déprécié"),
                            ("retired", "Retiré"),
                            ("maintenance", "Maintenance"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                ("is_public", models.BooleanField(default=True, verbose_name="Public")),
                (
                    "requires_auth",
                    models.BooleanField(
                        default=True, verbose_name="Authentification requise"
                    ),
                ),
                (
                    "rate_limit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Limite de taux (req/min)"
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(default=list, verbose_name="Paramètres"),
                ),
                (
                    "request_schema",
                    models.JSONField(default=dict, verbose_name="Schéma de requête"),
                ),
                (
                    "response_schema",
                    models.JSONField(default=dict, verbose_name="Schéma de réponse"),
                ),
                ("examples", models.JSONField(default=list, verbose_name="Exemples")),
                ("tags", models.JSONField(default=list, verbose_name="Tags")),
            ],
            options={
                "verbose_name": "Endpoint d'API",
                "verbose_name_plural": "Endpoints d'API",
                "ordering": ["api_version", "path", "method"],
            },
        ),
        migrations.CreateModel(
            name="APIHealthCheck",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="Nom"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "check_type",
                    models.CharField(
                        choices=[
                            ("database", "Base de données"),
                            ("cache", "Cache"),
                            ("external_api", "API externe"),
                            ("storage", "Stockage"),
                            ("queue", "File d'attente"),
                            ("custom", "Personnalisé"),
                        ],
                        max_length=20,
                        verbose_name="Type de vérification",
                    ),
                ),
                (
                    "endpoint_url",
                    models.URLField(blank=True, verbose_name="URL de l'endpoint"),
                ),
                (
                    "check_interval",
                    models.IntegerField(
                        default=60, verbose_name="Intervalle de vérification (secondes)"
                    ),
                ),
                (
                    "timeout",
                    models.IntegerField(default=30, verbose_name="Timeout (secondes)"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "expected_status_code",
                    models.IntegerField(
                        default=200, verbose_name="Code de statut attendu"
                    ),
                ),
                (
                    "expected_response",
                    models.TextField(blank=True, verbose_name="Réponse attendue"),
                ),
                ("headers", models.JSONField(default=dict, verbose_name="En-têtes")),
                (
                    "body",
                    models.TextField(blank=True, verbose_name="Corps de la requête"),
                ),
                ("tags", models.JSONField(default=list, verbose_name="Tags")),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_health_checks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Health Check d'API",
                "verbose_name_plural": "Health Checks d'API",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="APIRateLimit",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="Nom"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "scope",
                    models.CharField(
                        choices=[
                            ("global", "Global"),
                            ("user", "Utilisateur"),
                            ("ip", "Adresse IP"),
                            ("endpoint", "Endpoint"),
                            ("api_key", "Clé API"),
                        ],
                        max_length=20,
                        verbose_name="Portée",
                    ),
                ),
                (
                    "requests_per_minute",
                    models.IntegerField(default=60, verbose_name="Requêtes par minute"),
                ),
                (
                    "requests_per_hour",
                    models.IntegerField(
                        default=1000, verbose_name="Requêtes par heure"
                    ),
                ),
                (
                    "requests_per_day",
                    models.IntegerField(
                        default=10000, verbose_name="Requêtes par jour"
                    ),
                ),
                (
                    "burst_limit",
                    models.IntegerField(default=10, verbose_name="Limite de rafale"),
                ),
                (
                    "window_size",
                    models.IntegerField(
                        default=60, verbose_name="Taille de fenêtre (secondes)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "target_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP cible"
                    ),
                ),
                (
                    "target_api_key",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Clé API cible"
                    ),
                ),
                ("tags", models.JSONField(default=list, verbose_name="Tags")),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_rate_limits",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
                (
                    "target_endpoint",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rate_limits",
                        to="api.apiendpoint",
                        verbose_name="Endpoint cible",
                    ),
                ),
                (
                    "target_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rate_limits",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur cible",
                    ),
                ),
            ],
            options={
                "verbose_name": "Limite de taux d'API",
                "verbose_name_plural": "Limites de taux d'API",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="APISystemStatus",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "overall_status",
                    models.CharField(
                        choices=[
                            ("healthy", "En bonne santé"),
                            ("degraded", "Dégradé"),
                            ("unhealthy", "Malsain"),
                            ("unknown", "Inconnu"),
                        ],
                        max_length=20,
                        verbose_name="Statut global",
                    ),
                ),
                ("message", models.TextField(blank=True, verbose_name="Message")),
                (
                    "total_requests",
                    models.IntegerField(default=0, verbose_name="Total des requêtes"),
                ),
                (
                    "successful_requests",
                    models.IntegerField(default=0, verbose_name="Requêtes réussies"),
                ),
                (
                    "failed_requests",
                    models.IntegerField(default=0, verbose_name="Requêtes échouées"),
                ),
                (
                    "average_response_time",
                    models.FloatField(
                        default=0, verbose_name="Temps de réponse moyen (ms)"
                    ),
                ),
                (
                    "healthy_checks",
                    models.IntegerField(default=0, verbose_name="Health checks sains"),
                ),
                (
                    "degraded_checks",
                    models.IntegerField(
                        default=0, verbose_name="Health checks dégradés"
                    ),
                ),
                (
                    "unhealthy_checks",
                    models.IntegerField(
                        default=0, verbose_name="Health checks malsains"
                    ),
                ),
                (
                    "checked_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Vérifié à"),
                ),
            ],
            options={
                "verbose_name": "Statut du système API",
                "verbose_name_plural": "Statuts du système API",
                "ordering": ["-checked_at"],
            },
        ),
        migrations.CreateModel(
            name="APIVersion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Version"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nom de la version"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("development", "Développement"),
                            ("beta", "Bêta"),
                            ("stable", "Stable"),
                            ("deprecated", "Déprécié"),
                            ("retired", "Retiré"),
                        ],
                        default="development",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "release_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de sortie"
                    ),
                ),
                (
                    "deprecation_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de dépréciation"
                    ),
                ),
                (
                    "retirement_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de retrait"
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, verbose_name="Version par défaut"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=True, verbose_name="Publique"),
                ),
                ("changelog", models.JSONField(default=list, verbose_name="Changelog")),
                ("tags", models.JSONField(default=list, verbose_name="Tags")),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_api_versions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Version d'API",
                "verbose_name_plural": "Versions d'API",
                "ordering": ["-version"],
            },
        ),
        migrations.CreateModel(
            name="APIHealthCheckResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("healthy", "En bonne santé"),
                            ("degraded", "Dégradé"),
                            ("unhealthy", "Malsain"),
                            ("unknown", "Inconnu"),
                        ],
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "response_time",
                    models.FloatField(verbose_name="Temps de réponse (ms)"),
                ),
                (
                    "status_code",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Code de statut"
                    ),
                ),
                (
                    "response_body",
                    models.TextField(blank=True, verbose_name="Corps de la réponse"),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Message d'erreur"),
                ),
                (
                    "checked_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Vérifié à"),
                ),
                (
                    "health_check",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="api.apihealthcheck",
                        verbose_name="Health Check",
                    ),
                ),
            ],
            options={
                "verbose_name": "Résultat de Health Check",
                "verbose_name_plural": "Résultats de Health Checks",
                "ordering": ["-checked_at"],
            },
        ),
        migrations.AddField(
            model_name="apiendpoint",
            name="api_version",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="endpoints",
                to="api.apiversion",
                verbose_name="Version d'API",
            ),
        ),
        migrations.AddField(
            model_name="apiendpoint",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_api_endpoints",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Créé par",
            ),
        ),
        migrations.CreateModel(
            name="APIDocumentation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "doc_type",
                    models.CharField(
                        choices=[
                            ("overview", "Vue d'ensemble"),
                            ("getting_started", "Premiers pas"),
                            ("authentication", "Authentification"),
                            ("endpoints", "Endpoints"),
                            ("examples", "Exemples"),
                            ("sdk", "SDK"),
                            ("troubleshooting", "Dépannage"),
                            ("faq", "FAQ"),
                            ("changelog", "Changelog"),
                            ("migration", "Guide de migration"),
                        ],
                        max_length=20,
                        verbose_name="Type de documentation",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                ("content", models.TextField(verbose_name="Contenu")),
                ("is_public", models.BooleanField(default=True, verbose_name="Public")),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Mis en avant"),
                ),
                (
                    "display_order",
                    models.IntegerField(default=0, verbose_name="Ordre d'affichage"),
                ),
                ("summary", models.TextField(blank=True, verbose_name="Résumé")),
                ("tags", models.JSONField(default=list, verbose_name="Tags")),
                (
                    "api_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documentation",
                        to="api.apiversion",
                        verbose_name="Version d'API",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_api_documentation",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Documentation d'API",
                "verbose_name_plural": "Documentations d'API",
                "ordering": ["api_version", "display_order", "title"],
            },
        ),
        migrations.CreateModel(
            name="APIUsage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "method",
                    models.CharField(max_length=10, verbose_name="Méthode HTTP"),
                ),
                ("path", models.CharField(max_length=500, verbose_name="Chemin")),
                (
                    "query_params",
                    models.JSONField(
                        default=dict, verbose_name="Paramètres de requête"
                    ),
                ),
                (
                    "request_headers",
                    models.JSONField(default=dict, verbose_name="En-têtes de requête"),
                ),
                (
                    "request_body",
                    models.TextField(blank=True, verbose_name="Corps de la requête"),
                ),
                ("status_code", models.IntegerField(verbose_name="Code de statut")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Succès"),
                            ("error", "Erreur"),
                            ("rate_limited", "Limité par le taux"),
                            ("unauthorized", "Non autorisé"),
                            ("forbidden", "Interdit"),
                            ("not_found", "Non trouvé"),
                            ("server_error", "Erreur serveur"),
                        ],
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "response_headers",
                    models.JSONField(default=dict, verbose_name="En-têtes de réponse"),
                ),
                (
                    "response_body",
                    models.TextField(blank=True, verbose_name="Corps de la réponse"),
                ),
                (
                    "response_time",
                    models.FloatField(verbose_name="Temps de réponse (ms)"),
                ),
                (
                    "request_size",
                    models.IntegerField(
                        default=0, verbose_name="Taille de la requête (bytes)"
                    ),
                ),
                (
                    "response_size",
                    models.IntegerField(
                        default=0, verbose_name="Taille de la réponse (bytes)"
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="Adresse IP")),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                ("referer", models.URLField(blank=True, verbose_name="Référent")),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Message d'erreur"),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Clé API"
                    ),
                ),
                (
                    "api_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="api.apiversion",
                        verbose_name="Version d'API",
                    ),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="api.apiendpoint",
                        verbose_name="Endpoint",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="api_usage",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisation d'API",
                "verbose_name_plural": "Utilisations d'API",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["api_version", "created_at"],
                        name="api_apiusag_api_ver_56838d_idx",
                    ),
                    models.Index(
                        fields=["endpoint", "created_at"],
                        name="api_apiusag_endpoin_4413d9_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="api_apiusag_user_id_4bf989_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="api_apiusag_status_e2aa79_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="api_apiusag_ip_addr_67b3a1_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="APISDK",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("python", "Python"),
                            ("javascript", "JavaScript"),
                            ("java", "Java"),
                            ("php", "PHP"),
                            ("ruby", "Ruby"),
                            ("go", "Go"),
                            ("csharp", "C#"),
                            ("swift", "Swift"),
                            ("kotlin", "Kotlin"),
                            ("dart", "Dart"),
                        ],
                        max_length=20,
                        verbose_name="Langage",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom du SDK")),
                (
                    "version",
                    models.CharField(max_length=20, verbose_name="Version du SDK"),
                ),
                ("download_url", models.URLField(verbose_name="URL de téléchargement")),
                (
                    "repository_url",
                    models.URLField(blank=True, verbose_name="URL du repository"),
                ),
                (
                    "documentation_url",
                    models.URLField(blank=True, verbose_name="URL de la documentation"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "installation_instructions",
                    models.TextField(
                        blank=True, verbose_name="Instructions d'installation"
                    ),
                ),
                (
                    "api_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sdks",
                        to="api.apiversion",
                        verbose_name="Version d'API",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_api_sdks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "SDK d'API",
                "verbose_name_plural": "SDKs d'API",
                "ordering": ["api_version", "language", "version"],
                "unique_together": {("api_version", "language", "version")},
            },
        ),
        migrations.CreateModel(
            name="APIRateLimitUsage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="Adresse IP")),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Clé API"
                    ),
                ),
                (
                    "requests_count",
                    models.IntegerField(default=0, verbose_name="Nombre de requêtes"),
                ),
                ("window_start", models.DateTimeField(verbose_name="Début de fenêtre")),
                ("window_end", models.DateTimeField(verbose_name="Fin de fenêtre")),
                (
                    "is_limited",
                    models.BooleanField(default=False, verbose_name="Limité"),
                ),
                (
                    "limit_reached_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Limite atteinte à"
                    ),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rate_limit_usage",
                        to="api.apiendpoint",
                        verbose_name="Endpoint",
                    ),
                ),
                (
                    "rate_limit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="api.apiratelimit",
                        verbose_name="Limite de taux",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rate_limit_usage",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisation de limite de taux",
                "verbose_name_plural": "Utilisations de limites de taux",
                "ordering": ["-window_start"],
                "unique_together": {
                    (
                        "rate_limit",
                        "user",
                        "ip_address",
                        "endpoint",
                        "api_key",
                        "window_start",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="APIMetadata",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "metadata_type",
                    models.CharField(
                        choices=[
                            ("info", "Informations générales"),
                            ("contact", "Contact"),
                            ("license", "Licence"),
                            ("terms", "Conditions d'utilisation"),
                            ("privacy", "Politique de confidentialité"),
                            ("changelog", "Changelog"),
                            ("deprecation", "Avertissement de dépréciation"),
                            ("maintenance", "Maintenance"),
                            ("custom", "Personnalisé"),
                        ],
                        max_length=20,
                        verbose_name="Type de métadonnée",
                    ),
                ),
                ("key", models.CharField(max_length=100, verbose_name="Clé")),
                ("value", models.JSONField(verbose_name="Valeur")),
                ("is_public", models.BooleanField(default=True, verbose_name="Public")),
                (
                    "is_required",
                    models.BooleanField(default=False, verbose_name="Requis"),
                ),
                (
                    "display_order",
                    models.IntegerField(default=0, verbose_name="Ordre d'affichage"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "api_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metadata",
                        to="api.apiversion",
                        verbose_name="Version d'API",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_api_metadata",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Métadonnée d'API",
                "verbose_name_plural": "Métadonnées d'API",
                "ordering": ["api_version", "display_order", "key"],
                "unique_together": {("api_version", "metadata_type", "key")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="apiendpoint",
            unique_together={("api_version", "path", "method")},
        ),
    ]
