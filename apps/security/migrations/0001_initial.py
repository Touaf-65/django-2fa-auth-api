# Generated by Django 4.2.24 on 2025-09-07 23:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UserSecurity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("suspended", "Suspendu"),
                            ("locked", "Verrouillé"),
                            ("pending_verification", "En attente de vérification"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Statut de sécurité",
                    ),
                ),
                (
                    "failed_login_attempts",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Tentatives de connexion échouées"
                    ),
                ),
                (
                    "last_failed_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernière connexion échouée"
                    ),
                ),
                (
                    "last_successful_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernière connexion réussie"
                    ),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Dernière IP de connexion"
                    ),
                ),
                (
                    "last_login_country",
                    models.CharField(
                        blank=True,
                        max_length=2,
                        verbose_name="Dernier pays de connexion",
                    ),
                ),
                (
                    "last_login_city",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Dernière ville de connexion",
                    ),
                ),
                (
                    "known_ips",
                    models.JSONField(
                        blank=True, default=list, verbose_name="IPs connues"
                    ),
                ),
                (
                    "known_devices",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Appareils connus"
                    ),
                ),
                (
                    "require_2fa",
                    models.BooleanField(default=False, verbose_name="2FA obligatoire"),
                ),
                (
                    "allow_multiple_sessions",
                    models.BooleanField(
                        default=True, verbose_name="Autoriser les sessions multiples"
                    ),
                ),
                (
                    "max_concurrent_sessions",
                    models.PositiveIntegerField(
                        default=5, verbose_name="Nombre maximum de sessions simultanées"
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notifications par email"
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(
                        default=False, verbose_name="Notifications par SMS"
                    ),
                ),
                (
                    "push_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notifications push"
                    ),
                ),
                (
                    "allowed_countries",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Pays autorisés"
                    ),
                ),
                (
                    "blocked_countries",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Pays bloqués"
                    ),
                ),
                (
                    "allowed_hours_start",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de début autorisée"
                    ),
                ),
                (
                    "allowed_hours_end",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de fin autorisée"
                    ),
                ),
                (
                    "allowed_days",
                    models.JSONField(
                        blank=True,
                        default=list,
                        verbose_name="Jours autorisés (0=dimanche, 6=samedi)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="security_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profil de sécurité utilisateur",
                "verbose_name_plural": "Profils de sécurité utilisateur",
                "db_table": "security_user_security",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="SecurityRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nom de la règle"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("rate_limit", "Limitation de taux"),
                            ("login_attempts", "Tentatives de connexion"),
                            ("ip_blocking", "Blocage IP"),
                            ("suspicious_activity", "Activité suspecte"),
                            ("geographic", "Géographique"),
                            ("time_based", "Basé sur le temps"),
                        ],
                        max_length=20,
                        verbose_name="Type de règle",
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(default=dict, verbose_name="Conditions"),
                ),
                ("actions", models.JSONField(default=list, verbose_name="Actions")),
                (
                    "priority",
                    models.PositiveIntegerField(default=1, verbose_name="Priorité"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("inactive", "Inactif"),
                            ("testing", "En test"),
                        ],
                        default="active",
                        max_length=10,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "times_triggered",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Nombre de déclenchements"
                    ),
                ),
                (
                    "last_triggered",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernier déclenchement"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Règle de sécurité",
                "verbose_name_plural": "Règles de sécurité",
                "db_table": "security_security_rule",
                "ordering": ["-priority", "name"],
                "indexes": [
                    models.Index(
                        fields=["rule_type", "status"],
                        name="security_se_rule_ty_60f76f_idx",
                    ),
                    models.Index(
                        fields=["status", "priority"],
                        name="security_se_status_f51595_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="IPBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        unique=True, verbose_name="Adresse IP"
                    ),
                ),
                (
                    "block_type",
                    models.CharField(
                        choices=[
                            ("temporary", "Temporaire"),
                            ("permanent", "Permanent"),
                            ("manual", "Manuel"),
                            ("automatic", "Automatique"),
                        ],
                        default="automatic",
                        max_length=10,
                        verbose_name="Type de blocage",
                    ),
                ),
                (
                    "reason",
                    models.CharField(max_length=200, verbose_name="Raison du blocage"),
                ),
                ("details", models.TextField(blank=True, verbose_name="Détails")),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Durée en minutes"
                    ),
                ),
                (
                    "blocked_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de blocage"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date d'expiration"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("expired", "Expiré"),
                            ("manually_removed", "Supprimé manuellement"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Blocage IP",
                "verbose_name_plural": "Blocages IP",
                "db_table": "security_ip_block",
                "ordering": ["-blocked_at"],
                "indexes": [
                    models.Index(
                        fields=["ip_address"], name="security_ip_ip_addr_1e71b9_idx"
                    ),
                    models.Index(
                        fields=["status", "expires_at"],
                        name="security_ip_status_dab743_idx",
                    ),
                    models.Index(
                        fields=["block_type", "status"],
                        name="security_ip_block_t_c6a6e7_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("login_success", "Connexion réussie"),
                            ("login_failed", "Connexion échouée"),
                            ("login_blocked", "Connexion bloquée"),
                            ("password_changed", "Mot de passe changé"),
                            ("password_reset", "Mot de passe réinitialisé"),
                            ("profile_updated", "Profil mis à jour"),
                            ("2fa_enabled", "2FA activée"),
                            ("2fa_disabled", "2FA désactivée"),
                            ("suspicious_activity", "Activité suspecte"),
                            ("ip_blocked", "IP bloquée"),
                            ("rate_limit_exceeded", "Limite de taux dépassée"),
                            ("unusual_location", "Localisation inhabituelle"),
                            ("multiple_devices", "Multiples appareils"),
                        ],
                        max_length=30,
                        verbose_name="Type d'événement",
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Faible"),
                            ("medium", "Moyen"),
                            ("high", "Élevé"),
                            ("critical", "Critique"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="Gravité",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                ("description", models.TextField(verbose_name="Description")),
                ("ip_address", models.GenericIPAddressField(verbose_name="Adresse IP")),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=2, verbose_name="Pays (code ISO)"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="Ville"),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Métadonnées"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("processing", "En cours de traitement"),
                            ("processed", "Traité"),
                            ("ignored", "Ignoré"),
                            ("escalated", "Escaladé"),
                        ],
                        default="processing",
                        max_length=15,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "actions_taken",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Actions prises"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="security_events",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Événement de sécurité",
                "verbose_name_plural": "Événements de sécurité",
                "db_table": "security_security_event",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "created_at"],
                        name="security_se_event_t_49411a_idx",
                    ),
                    models.Index(
                        fields=["severity", "created_at"],
                        name="security_se_severit_69c517_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="security_se_ip_addr_ed6b65_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="security_se_status_63e6fc_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="Email utilisé"),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name="Nom d'utilisateur utilisé",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Succès"),
                            ("failed", "Échec"),
                            ("blocked", "Bloqué"),
                            ("locked", "Verrouillé"),
                        ],
                        max_length=10,
                        verbose_name="Statut",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="Adresse IP")),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=2, verbose_name="Pays (code ISO)"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="Ville"),
                ),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Raison de l'échec"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="login_attempts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tentative de connexion",
                "verbose_name_plural": "Tentatives de connexion",
                "db_table": "security_login_attempt",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="security_lo_ip_addr_7c1e00_idx",
                    ),
                    models.Index(
                        fields=["email", "created_at"],
                        name="security_lo_email_3406a6_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="security_lo_status_95371e_idx",
                    ),
                ],
            },
        ),
    ]
