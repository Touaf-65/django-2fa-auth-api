# Generated by Django 4.2.24 on 2025-09-09 00:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalyticsDashboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "dashboard_type",
                    models.CharField(
                        choices=[
                            ("executive", "Direction"),
                            ("operational", "Opérationnel"),
                            ("technical", "Technique"),
                            ("security", "Sécurité"),
                            ("custom", "Personnalisé"),
                        ],
                        max_length=20,
                    ),
                ),
                ("layout_config", models.JSONField(default=dict)),
                ("refresh_interval", models.PositiveIntegerField(default=300)),
                ("is_public", models.BooleanField(default=False)),
                ("is_default", models.BooleanField(default=False)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("view_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Tableau de Bord Analytics",
                "verbose_name_plural": "Tableaux de Bord Analytics",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsMetric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("display_name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("user", "Utilisateur"),
                            ("security", "Sécurité"),
                            ("performance", "Performance"),
                            ("usage", "Utilisation"),
                            ("business", "Business"),
                            ("system", "Système"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("counter", "Compteur"),
                            ("gauge", "Jauge"),
                            ("histogram", "Histogramme"),
                            ("summary", "Résumé"),
                        ],
                        max_length=20,
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=20)),
                ("aggregation_method", models.CharField(default="sum", max_length=50)),
                ("retention_days", models.PositiveIntegerField(default=90)),
                ("calculation_query", models.TextField(blank=True)),
                ("data_source", models.CharField(blank=True, max_length=100)),
                ("warning_threshold", models.FloatField(blank=True, null=True)),
                ("critical_threshold", models.FloatField(blank=True, null=True)),
                ("alert_enabled", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("last_calculated", models.DateTimeField(blank=True, null=True)),
                ("calculation_frequency", models.PositiveIntegerField(default=3600)),
            ],
            options={
                "verbose_name": "Métrique Analytics",
                "verbose_name_plural": "Métriques Analytics",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="ExportFormat",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "format_type",
                    models.CharField(
                        choices=[
                            ("csv", "CSV"),
                            ("excel", "Excel"),
                            ("pdf", "PDF"),
                            ("json", "JSON"),
                            ("xml", "XML"),
                        ],
                        max_length=10,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("mime_type", models.CharField(max_length=100)),
                ("file_extension", models.CharField(max_length=10)),
                ("template_path", models.CharField(blank=True, max_length=200)),
                ("config", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Format d'Export",
                "verbose_name_plural": "Formats d'Export",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ReportTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("user_activity", "Activité Utilisateur"),
                            ("security_audit", "Audit Sécurité"),
                            ("performance", "Performance"),
                            ("usage", "Utilisation"),
                            ("custom", "Personnalisé"),
                        ],
                        max_length=20,
                    ),
                ),
                ("template_config", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_analytics_report_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Template de Rapport",
                "verbose_name_plural": "Templates de Rapports",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ReportSchedule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Quotidien"),
                            ("weekly", "Hebdomadaire"),
                            ("monthly", "Mensuel"),
                            ("quarterly", "Trimestriel"),
                            ("yearly", "Annuel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("cron_expression", models.CharField(blank=True, max_length=100)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("recipients", models.JSONField(default=list)),
                ("notification_enabled", models.BooleanField(default=True)),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("next_run", models.DateTimeField(blank=True, null=True)),
                (
                    "last_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "En Attente"),
                            ("generating", "Génération"),
                            ("completed", "Terminé"),
                            ("failed", "Échec"),
                        ],
                        max_length=20,
                    ),
                ),
                ("total_runs", models.PositiveIntegerField(default=0)),
                ("successful_runs", models.PositiveIntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_analytics_report_schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="analytics.reporttemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Planification de Rapport",
                "verbose_name_plural": "Planifications de Rapports",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("user_activity", "Activité Utilisateur"),
                            ("security_audit", "Audit Sécurité"),
                            ("performance", "Performance"),
                            ("usage", "Utilisation"),
                            ("custom", "Personnalisé"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En Attente"),
                            ("generating", "Génération"),
                            ("completed", "Terminé"),
                            ("failed", "Échec"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("config", models.JSONField(default=dict)),
                ("filters", models.JSONField(default=dict)),
                ("date_range_start", models.DateTimeField(blank=True, null=True)),
                ("date_range_end", models.DateTimeField(blank=True, null=True)),
                ("data", models.JSONField(blank=True, default=dict)),
                ("summary", models.JSONField(blank=True, default=dict)),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("generated_at", models.DateTimeField(blank=True, null=True)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "generated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_analytics_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="analytics.reporttemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rapport",
                "verbose_name_plural": "Rapports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MetricValue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("value", models.FloatField()),
                ("timestamp", models.DateTimeField()),
                ("labels", models.JSONField(default=dict)),
                ("dimensions", models.JSONField(default=dict)),
                ("source", models.CharField(blank=True, max_length=100)),
                (
                    "calculated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="calculated_analytics_metrics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "metric",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="analytics.analyticsmetric",
                    ),
                ),
            ],
            options={
                "verbose_name": "Valeur de Métrique",
                "verbose_name_plural": "Valeurs de Métriques",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="DataExport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En Attente"),
                            ("processing", "Traitement"),
                            ("completed", "Terminé"),
                            ("failed", "Échec"),
                            ("expired", "Expiré"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("data_source", models.CharField(max_length=100)),
                ("query", models.TextField(blank=True)),
                ("filters", models.JSONField(default=dict)),
                ("columns", models.JSONField(default=list)),
                ("date_range_start", models.DateTimeField(blank=True, null=True)),
                ("date_range_end", models.DateTimeField(blank=True, null=True)),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("file_name", models.CharField(blank=True, max_length=200)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("include_metadata", models.BooleanField(default=True)),
                ("compression_enabled", models.BooleanField(default=False)),
                ("password_protected", models.BooleanField(default=False)),
                (
                    "export_format",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="analytics.exportformat",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requested_analytics_exports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Export de Données",
                "verbose_name_plural": "Exports de Données",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DashboardWidget",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "widget_type",
                    models.CharField(
                        choices=[
                            ("chart", "Graphique"),
                            ("metric", "Métrique"),
                            ("table", "Tableau"),
                            ("gauge", "Jauge"),
                            ("map", "Carte"),
                            ("text", "Texte"),
                            ("iframe", "Iframe"),
                        ],
                        max_length=20,
                    ),
                ),
                ("config", models.JSONField(default=dict)),
                ("data_source", models.CharField(blank=True, max_length=100)),
                ("query", models.TextField(blank=True)),
                ("position_x", models.PositiveIntegerField(default=0)),
                ("position_y", models.PositiveIntegerField(default=0)),
                ("width", models.PositiveIntegerField(default=4)),
                ("height", models.PositiveIntegerField(default=3)),
                (
                    "chart_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("line", "Ligne"),
                            ("bar", "Barres"),
                            ("pie", "Secteurs"),
                            ("area", "Aire"),
                            ("scatter", "Nuage de points"),
                            ("heatmap", "Carte de chaleur"),
                        ],
                        max_length=20,
                    ),
                ),
                ("x_axis", models.CharField(blank=True, max_length=100)),
                ("y_axis", models.CharField(blank=True, max_length=100)),
                ("filters", models.JSONField(default=dict)),
                (
                    "refresh_interval",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("is_visible", models.BooleanField(default=True)),
                ("is_loading", models.BooleanField(default=False)),
                ("last_updated", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="analytics.analyticsdashboard",
                    ),
                ),
            ],
            options={
                "verbose_name": "Widget de Tableau de Bord",
                "verbose_name_plural": "Widgets de Tableau de Bord",
                "ordering": ["position_y", "position_x"],
            },
        ),
        migrations.AddIndex(
            model_name="analyticsmetric",
            index=models.Index(
                fields=["category", "is_active"], name="analytics_a_categor_878149_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsmetric",
            index=models.Index(
                fields=["metric_type"], name="analytics_a_metric__ff7f88_idx"
            ),
        ),
        migrations.AddField(
            model_name="analyticsdashboard",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_dashboards",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="analyticsdashboard",
            name="shared_with",
            field=models.ManyToManyField(
                blank=True,
                related_name="shared_dashboards",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=["report_type", "status"], name="analytics_r_report__9a7b7d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=["generated_by", "created_at"],
                name="analytics_r_generat_c4eaba_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=["date_range_start", "date_range_end"],
                name="analytics_r_date_ra_17b660_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="metricvalue",
            index=models.Index(
                fields=["metric", "timestamp"], name="analytics_m_metric__7d9082_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metricvalue",
            index=models.Index(
                fields=["timestamp"], name="analytics_m_timesta_750b9f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metricvalue",
            index=models.Index(fields=["source"], name="analytics_m_source_0760a2_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="metricvalue",
            unique_together={("metric", "timestamp", "labels")},
        ),
        migrations.AddIndex(
            model_name="dataexport",
            index=models.Index(
                fields=["status", "created_at"], name="analytics_d_status_2bce5f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dataexport",
            index=models.Index(
                fields=["requested_by", "created_at"],
                name="analytics_d_request_4456e7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="dataexport",
            index=models.Index(
                fields=["export_format"], name="analytics_d_export__f7a34b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dataexport",
            index=models.Index(
                fields=["expires_at"], name="analytics_d_expires_ff5e2e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardwidget",
            index=models.Index(
                fields=["dashboard", "widget_type"],
                name="analytics_d_dashboa_ef194f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardwidget",
            index=models.Index(
                fields=["data_source"], name="analytics_d_data_so_fbf207_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsdashboard",
            index=models.Index(
                fields=["dashboard_type", "is_public"],
                name="analytics_a_dashboa_b16fd8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsdashboard",
            index=models.Index(
                fields=["owner", "created_at"], name="analytics_a_owner_i_9d839c_idx"
            ),
        ),
    ]
