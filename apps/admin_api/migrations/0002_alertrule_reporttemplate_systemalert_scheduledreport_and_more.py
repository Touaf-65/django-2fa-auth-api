# Generated by Django 4.2.24 on 2025-09-08 08:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("admin_api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AlertRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nom de la règle"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("system", "Système"),
                            ("performance", "Performance"),
                            ("security", "Sécurité"),
                            ("user", "Utilisateur"),
                            ("database", "Base de données"),
                            ("disk", "Espace disque"),
                            ("memory", "Mémoire"),
                            ("cpu", "CPU"),
                            ("network", "Réseau"),
                            ("api", "API"),
                            ("error", "Erreur"),
                            ("custom", "Personnalisé"),
                        ],
                        max_length=20,
                        verbose_name="Type d'alerte",
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Faible"),
                            ("medium", "Moyen"),
                            ("high", "Élevé"),
                            ("critical", "Critique"),
                        ],
                        default="medium",
                        max_length=20,
                        verbose_name="Sévérité",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("inactive", "Inactif"),
                            ("paused", "En pause"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                ("condition", models.JSONField(verbose_name="Condition d'alerte")),
                (
                    "threshold_value",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Valeur seuil"
                    ),
                ),
                (
                    "comparison_operator",
                    models.CharField(
                        default=">",
                        max_length=10,
                        verbose_name="Opérateur de comparaison",
                    ),
                ),
                (
                    "check_interval",
                    models.IntegerField(
                        default=300,
                        verbose_name="Intervalle de vérification (secondes)",
                    ),
                ),
                (
                    "cooldown_period",
                    models.IntegerField(
                        default=3600, verbose_name="Période de cooldown (secondes)"
                    ),
                ),
                (
                    "max_alerts_per_hour",
                    models.IntegerField(
                        default=10, verbose_name="Max alertes par heure"
                    ),
                ),
                (
                    "notification_channels",
                    models.JSONField(
                        default=list, verbose_name="Canaux de notification"
                    ),
                ),
                (
                    "escalation_rules",
                    models.JSONField(default=dict, verbose_name="Règles d'escalade"),
                ),
                ("tags", models.JSONField(default=list, verbose_name="Tags")),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_alert_rules",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Règle d'alerte",
                "verbose_name_plural": "Règles d'alerte",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nom du template"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("users", "Utilisateurs"),
                            ("activity", "Activité"),
                            ("security", "Sécurité"),
                            ("performance", "Performance"),
                            ("system", "Système"),
                            ("errors", "Erreurs"),
                            ("api_usage", "Utilisation API"),
                            ("custom", "Personnalisé"),
                        ],
                        max_length=20,
                        verbose_name="Type de rapport",
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("json", "JSON"),
                            ("csv", "CSV"),
                            ("xlsx", "Excel"),
                            ("pdf", "PDF"),
                            ("html", "HTML"),
                        ],
                        default="json",
                        max_length=10,
                        verbose_name="Format",
                    ),
                ),
                (
                    "query_config",
                    models.JSONField(verbose_name="Configuration de requête"),
                ),
                (
                    "template_config",
                    models.JSONField(
                        default=dict, verbose_name="Configuration du template"
                    ),
                ),
                ("filters", models.JSONField(default=dict, verbose_name="Filtres")),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                ("tags", models.JSONField(default=list, verbose_name="Tags")),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_report_templates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Template de rapport",
                "verbose_name_plural": "Templates de rapport",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SystemAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("triggered", "Déclenchée"),
                            ("acknowledged", "Reconnue"),
                            ("resolved", "Résolue"),
                            ("suppressed", "Supprimée"),
                        ],
                        default="triggered",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "current_value",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Valeur actuelle"
                    ),
                ),
                (
                    "threshold_value",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Valeur seuil"
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Faible"),
                            ("medium", "Moyen"),
                            ("high", "Élevé"),
                            ("critical", "Critique"),
                        ],
                        max_length=20,
                        verbose_name="Sévérité",
                    ),
                ),
                (
                    "triggered_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Déclenchée à"
                    ),
                ),
                (
                    "acknowledged_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Reconnue à"
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Résolue à"
                    ),
                ),
                (
                    "context_data",
                    models.JSONField(
                        default=dict, verbose_name="Données contextuelles"
                    ),
                ),
                (
                    "notification_sent",
                    models.BooleanField(
                        default=False, verbose_name="Notification envoyée"
                    ),
                ),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Reconnue par",
                    ),
                ),
                (
                    "alert_rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="admin_api.alertrule",
                        verbose_name="Règle d'alerte",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Résolue par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alerte système",
                "verbose_name_plural": "Alertes système",
                "ordering": ["-triggered_at"],
            },
        ),
        migrations.CreateModel(
            name="ScheduledReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200, verbose_name="Nom du rapport programmé"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("hourly", "Horaire"),
                            ("daily", "Quotidien"),
                            ("weekly", "Hebdomadaire"),
                            ("monthly", "Mensuel"),
                            ("quarterly", "Trimestriel"),
                            ("yearly", "Annuel"),
                            ("custom", "Personnalisé"),
                        ],
                        max_length=20,
                        verbose_name="Fréquence",
                    ),
                ),
                (
                    "cron_expression",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Expression CRON"
                    ),
                ),
                (
                    "next_run",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Prochaine exécution"
                    ),
                ),
                (
                    "last_run",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernière exécution"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("inactive", "Inactif"),
                            ("paused", "En pause"),
                            ("error", "Erreur"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "recipients",
                    models.JSONField(default=list, verbose_name="Destinataires"),
                ),
                (
                    "notification_channels",
                    models.JSONField(
                        default=list, verbose_name="Canaux de notification"
                    ),
                ),
                (
                    "retention_days",
                    models.IntegerField(default=30, verbose_name="Rétention (jours)"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_scheduled_reports",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_reports",
                        to="admin_api.reporttemplate",
                        verbose_name="Template",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rapport programmé",
                "verbose_name_plural": "Rapports programmés",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportExecution",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("running", "En cours"),
                            ("completed", "Terminé"),
                            ("failed", "Échoué"),
                            ("cancelled", "Annulé"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Début"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Fin"),
                ),
                (
                    "duration",
                    models.DurationField(blank=True, null=True, verbose_name="Durée"),
                ),
                (
                    "file_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Chemin du fichier"
                    ),
                ),
                (
                    "file_size",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="Taille du fichier"
                    ),
                ),
                (
                    "record_count",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Nombre d'enregistrements"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Message d'erreur"),
                ),
                (
                    "execution_log",
                    models.JSONField(default=list, verbose_name="Log d'exécution"),
                ),
                (
                    "parameters",
                    models.JSONField(default=dict, verbose_name="Paramètres"),
                ),
                (
                    "scheduled_report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="admin_api.scheduledreport",
                        verbose_name="Rapport programmé",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="admin_api.reporttemplate",
                        verbose_name="Template",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exécution de rapport",
                "verbose_name_plural": "Exécutions de rapport",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AlertNotification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "channel_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("webhook", "Webhook"),
                            ("slack", "Slack"),
                            ("teams", "Microsoft Teams"),
                            ("discord", "Discord"),
                        ],
                        max_length=20,
                        verbose_name="Type de canal",
                    ),
                ),
                (
                    "recipient",
                    models.CharField(max_length=500, verbose_name="Destinataire"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("sent", "Envoyée"),
                            ("failed", "Échouée"),
                            ("delivered", "Livrée"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "subject",
                    models.CharField(blank=True, max_length=200, verbose_name="Sujet"),
                ),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Envoyée à"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Livrée à"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Message d'erreur"),
                ),
                (
                    "retry_count",
                    models.IntegerField(default=0, verbose_name="Nombre de tentatives"),
                ),
                (
                    "alert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="admin_api.systemalert",
                        verbose_name="Alerte",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification d'alerte",
                "verbose_name_plural": "Notifications d'alerte",
                "ordering": ["-created_at"],
            },
        ),
    ]
