# Generated by Django 4.2.24 on 2025-09-08 00:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nom du groupe"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_groups",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Groupe",
                "verbose_name_plural": "Groupes",
                "db_table": "permissions_group",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nom de la permission"
                    ),
                ),
                (
                    "codename",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Code de la permission",
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "app_label",
                    models.CharField(max_length=50, verbose_name="Application"),
                ),
                ("model", models.CharField(max_length=50, verbose_name="Modèle")),
                ("action", models.CharField(max_length=50, verbose_name="Action")),
                (
                    "field_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom du champ"
                    ),
                ),
                (
                    "min_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="Valeur minimale",
                    ),
                ),
                (
                    "max_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="Valeur maximale",
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Conditions"
                    ),
                ),
                (
                    "is_custom",
                    models.BooleanField(
                        default=False, verbose_name="Permission personnalisée"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_permissions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Permission",
                "verbose_name_plural": "Permissions",
                "db_table": "permissions_permission",
                "ordering": ["app_label", "model", "action", "field_name"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nom du rôle"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "is_system",
                    models.BooleanField(default=False, verbose_name="Rôle système"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rôle",
                "verbose_name_plural": "Rôles",
                "db_table": "permissions_role",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="RolePermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("granted", models.BooleanField(default=True, verbose_name="Accordé")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permissions.permission",
                        verbose_name="Permission",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permissions.role",
                        verbose_name="Rôle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Permission de rôle",
                "verbose_name_plural": "Permissions de rôle",
                "db_table": "permissions_role_permission",
                "ordering": ["role", "permission"],
            },
        ),
        migrations.CreateModel(
            name="RoleDelegation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Date de début"
                    ),
                ),
                ("end_date", models.DateTimeField(verbose_name="Date de fin")),
                (
                    "max_uses",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre maximum d'utilisations",
                    ),
                ),
                (
                    "current_uses",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Utilisations actuelles"
                    ),
                ),
                (
                    "allowed_ips",
                    models.JSONField(
                        blank=True, default=list, verbose_name="IPs autorisées"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "delegatee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Délégué",
                    ),
                ),
                (
                    "delegator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delegated_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Délégateur",
                    ),
                ),
                (
                    "excluded_permissions",
                    models.ManyToManyField(
                        blank=True,
                        to="permissions.permission",
                        verbose_name="Permissions exclues",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permissions.role",
                        verbose_name="Rôle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Délégation de rôle",
                "verbose_name_plural": "Délégations de rôles",
                "db_table": "permissions_role_delegation",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="role",
            name="permissions",
            field=models.ManyToManyField(
                related_name="roles",
                through="permissions.RolePermission",
                to="permissions.permission",
                verbose_name="Permissions",
            ),
        ),
        migrations.CreateModel(
            name="PermissionManager",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "can_create_permissions",
                    models.BooleanField(
                        default=False, verbose_name="Peut créer des permissions"
                    ),
                ),
                (
                    "can_modify_permissions",
                    models.BooleanField(
                        default=False, verbose_name="Peut modifier des permissions"
                    ),
                ),
                (
                    "can_delete_permissions",
                    models.BooleanField(
                        default=False, verbose_name="Peut supprimer des permissions"
                    ),
                ),
                (
                    "can_create_roles",
                    models.BooleanField(
                        default=False, verbose_name="Peut créer des rôles"
                    ),
                ),
                (
                    "can_modify_roles",
                    models.BooleanField(
                        default=False, verbose_name="Peut modifier des rôles"
                    ),
                ),
                (
                    "can_delete_roles",
                    models.BooleanField(
                        default=False, verbose_name="Peut supprimer des rôles"
                    ),
                ),
                (
                    "can_assign_roles",
                    models.BooleanField(
                        default=False, verbose_name="Peut assigner des rôles"
                    ),
                ),
                (
                    "can_create_groups",
                    models.BooleanField(
                        default=False, verbose_name="Peut créer des groupes"
                    ),
                ),
                (
                    "can_modify_groups",
                    models.BooleanField(
                        default=False, verbose_name="Peut modifier des groupes"
                    ),
                ),
                (
                    "can_delete_groups",
                    models.BooleanField(
                        default=False, verbose_name="Peut supprimer des groupes"
                    ),
                ),
                (
                    "can_manage_groups",
                    models.BooleanField(
                        default=False, verbose_name="Peut gérer les groupes"
                    ),
                ),
                (
                    "can_delegate_permissions",
                    models.BooleanField(
                        default=False, verbose_name="Peut déléguer des permissions"
                    ),
                ),
                (
                    "can_delegate_roles",
                    models.BooleanField(
                        default=False, verbose_name="Peut déléguer des rôles"
                    ),
                ),
                (
                    "max_delegation_duration_days",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Durée maximale de délégation (jours)",
                    ),
                ),
                (
                    "max_delegation_uses",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre maximum d'utilisations de délégation",
                    ),
                ),
                (
                    "allowed_apps",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Applications autorisées"
                    ),
                ),
                (
                    "allowed_models",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Modèles autorisés"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'assignation"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_permission_managers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Assigné par",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permission_manager_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Gestionnaire de permissions",
                "verbose_name_plural": "Gestionnaires de permissions",
                "db_table": "permissions_permission_manager",
                "ordering": ["user"],
            },
        ),
        migrations.CreateModel(
            name="PermissionDelegation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Date de début"
                    ),
                ),
                ("end_date", models.DateTimeField(verbose_name="Date de fin")),
                (
                    "max_uses",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre maximum d'utilisations",
                    ),
                ),
                (
                    "current_uses",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Utilisations actuelles"
                    ),
                ),
                (
                    "allowed_ips",
                    models.JSONField(
                        blank=True, default=list, verbose_name="IPs autorisées"
                    ),
                ),
                (
                    "allowed_actions",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Actions autorisées"
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        verbose_name="Conditions supplémentaires",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "delegatee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_permissions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Délégué",
                    ),
                ),
                (
                    "delegator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delegated_permissions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Délégateur",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permissions.permission",
                        verbose_name="Permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "Délégation de permission",
                "verbose_name_plural": "Délégations de permissions",
                "db_table": "permissions_permission_delegation",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="GroupRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'assignation"
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_group_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Assigné par",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permissions.group",
                        verbose_name="Groupe",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permissions.role",
                        verbose_name="Rôle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rôle de groupe",
                "verbose_name_plural": "Rôles de groupe",
                "db_table": "permissions_group_role",
                "ordering": ["group", "role"],
            },
        ),
        migrations.CreateModel(
            name="GroupMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "joined_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'adhésion"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permissions.group",
                        verbose_name="Groupe",
                    ),
                ),
                (
                    "joined_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="added_group_members",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ajouté par",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Adhésion au groupe",
                "verbose_name_plural": "Adhésions aux groupes",
                "db_table": "permissions_group_membership",
                "ordering": ["group", "user"],
            },
        ),
        migrations.AddField(
            model_name="group",
            name="roles",
            field=models.ManyToManyField(
                related_name="groups",
                through="permissions.GroupRole",
                to="permissions.role",
                verbose_name="Rôles",
            ),
        ),
        migrations.AddField(
            model_name="group",
            name="users",
            field=models.ManyToManyField(
                related_name="permission_groups",
                through="permissions.GroupMembership",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Utilisateurs",
            ),
        ),
        migrations.CreateModel(
            name="ConditionalPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "condition_type",
                    models.CharField(
                        choices=[
                            ("temporal", "Temporelle"),
                            ("geographic", "Géographique"),
                            ("resource_ownership", "Propriété de ressource"),
                            ("department", "Département"),
                            ("hierarchy", "Hiérarchie"),
                            ("ip_restriction", "Restriction IP"),
                        ],
                        max_length=20,
                        verbose_name="Type de condition",
                    ),
                ),
                (
                    "condition_data",
                    models.JSONField(default=dict, verbose_name="Données de condition"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conditional_permissions",
                        to="permissions.permission",
                        verbose_name="Permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "Permission conditionnelle",
                "verbose_name_plural": "Permissions conditionnelles",
                "db_table": "permissions_conditional_permission",
                "ordering": ["permission", "condition_type"],
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date d'expiration"
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date d'assignation"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_user_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Assigné par",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to="permissions.role",
                        verbose_name="Rôle",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rôle utilisateur",
                "verbose_name_plural": "Rôles utilisateur",
                "db_table": "permissions_user_role",
                "ordering": ["user", "role"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_active"],
                        name="permissions_user_id_0622a8_idx",
                    ),
                    models.Index(
                        fields=["role", "is_active"],
                        name="permissions_role_id_ddd10d_idx",
                    ),
                    models.Index(
                        fields=["expires_at"], name="permissions_expires_0194c8_idx"
                    ),
                ],
                "unique_together": {("user", "role")},
            },
        ),
        migrations.AddIndex(
            model_name="rolepermission",
            index=models.Index(
                fields=["role", "granted"], name="permissions_role_id_27f48a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rolepermission",
            index=models.Index(
                fields=["permission", "granted"], name="permissions_permiss_a9b824_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rolepermission",
            unique_together={("role", "permission")},
        ),
        migrations.AddIndex(
            model_name="roledelegation",
            index=models.Index(
                fields=["delegator", "is_active"], name="permissions_delegat_c02a04_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="roledelegation",
            index=models.Index(
                fields=["delegatee", "is_active"], name="permissions_delegat_8f7527_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="roledelegation",
            index=models.Index(
                fields=["role", "is_active"], name="permissions_role_id_d2d5a3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="roledelegation",
            index=models.Index(
                fields=["end_date"], name="permissions_end_dat_9f79eb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="role",
            index=models.Index(
                fields=["is_active"], name="permissions_is_acti_c1045d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="role",
            index=models.Index(
                fields=["is_system"], name="permissions_is_syst_f8c438_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="permissionmanager",
            index=models.Index(
                fields=["is_active"], name="permissions_is_acti_cd9b2f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="permissiondelegation",
            index=models.Index(
                fields=["delegator", "is_active"], name="permissions_delegat_fb80ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="permissiondelegation",
            index=models.Index(
                fields=["delegatee", "is_active"], name="permissions_delegat_2b0f7c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="permissiondelegation",
            index=models.Index(
                fields=["permission", "is_active"],
                name="permissions_permiss_4bef7e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="permissiondelegation",
            index=models.Index(
                fields=["end_date"], name="permissions_end_dat_d109ae_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="permission",
            index=models.Index(
                fields=["app_label", "model", "action"],
                name="permissions_app_lab_caab4f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="permission",
            index=models.Index(
                fields=["codename"], name="permissions_codenam_0251e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="permission",
            index=models.Index(
                fields=["is_active"], name="permissions_is_acti_9afbb7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="grouprole",
            index=models.Index(fields=["group"], name="permissions_group_i_315755_idx"),
        ),
        migrations.AddIndex(
            model_name="grouprole",
            index=models.Index(fields=["role"], name="permissions_role_id_9d7014_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="grouprole",
            unique_together={("group", "role")},
        ),
        migrations.AddIndex(
            model_name="groupmembership",
            index=models.Index(
                fields=["user", "is_active"], name="permissions_user_id_fb51cd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="groupmembership",
            index=models.Index(
                fields=["group", "is_active"], name="permissions_group_i_06c260_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="groupmembership",
            unique_together={("user", "group")},
        ),
        migrations.AddIndex(
            model_name="group",
            index=models.Index(
                fields=["is_active"], name="permissions_is_acti_d1b979_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conditionalpermission",
            index=models.Index(
                fields=["permission", "condition_type"],
                name="permissions_permiss_3634a8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="conditionalpermission",
            index=models.Index(
                fields=["is_active"], name="permissions_is_acti_3b1db9_idx"
            ),
        ),
    ]
