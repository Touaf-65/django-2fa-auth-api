# Generated by Django 4.2.24 on 2025-09-07 22:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Description personnelle (500 caractères max)",
                        max_length=500,
                        verbose_name="Biographie",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de naissance"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Homme"),
                            ("female", "Femme"),
                            ("other", "Autre"),
                            ("prefer_not_to_say", "Préfère ne pas dire"),
                        ],
                        max_length=20,
                        verbose_name="Genre",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Localisation"
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, verbose_name="Site web personnel"),
                ),
                (
                    "job_title",
                    models.CharField(blank=True, max_length=100, verbose_name="Poste"),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Entreprise"
                    ),
                ),
                (
                    "industry",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Secteur d'activité"
                    ),
                ),
                ("linkedin_url", models.URLField(blank=True, verbose_name="LinkedIn")),
                (
                    "twitter_handle",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Format Twitter invalide. Utilisez @username ou username",
                                regex="^@?[A-Za-z0-9_]{1,15}$",
                            )
                        ],
                        verbose_name="Twitter",
                    ),
                ),
                (
                    "github_username",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Nom d'utilisateur GitHub invalide",
                                regex="^[a-zA-Z0-9]([a-zA-Z0-9]|-(?=[a-zA-Z0-9])){0,38}$",
                            )
                        ],
                        verbose_name="GitHub",
                    ),
                ),
                (
                    "profile_visibility",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("friends", "Amis seulement"),
                            ("private", "Privé"),
                        ],
                        default="public",
                        max_length=20,
                        verbose_name="Visibilité du profil",
                    ),
                ),
                (
                    "show_email",
                    models.BooleanField(default=False, verbose_name="Afficher l'email"),
                ),
                (
                    "show_phone",
                    models.BooleanField(
                        default=False, verbose_name="Afficher le téléphone"
                    ),
                ),
                (
                    "show_birth_date",
                    models.BooleanField(
                        default=False, verbose_name="Afficher la date de naissance"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "last_profile_update",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Dernière mise à jour du profil",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profil utilisateur",
                "verbose_name_plural": "Profils utilisateur",
                "db_table": "users_user_profile",
            },
        ),
        migrations.CreateModel(
            name="UserPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Clair"),
                            ("dark", "Sombre"),
                            ("auto", "Automatique"),
                        ],
                        default="auto",
                        max_length=20,
                        verbose_name="Thème",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "Français"),
                            ("es", "Español"),
                            ("de", "Deutsch"),
                        ],
                        default="fr",
                        max_length=5,
                        verbose_name="Langue",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Europe/Paris",
                        max_length=50,
                        verbose_name="Fuseau horaire",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notifications email"
                    ),
                ),
                (
                    "push_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notifications push"
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(
                        default=False, verbose_name="Notifications SMS"
                    ),
                ),
                (
                    "notify_new_followers",
                    models.BooleanField(default=True, verbose_name="Nouveaux abonnés"),
                ),
                (
                    "notify_new_messages",
                    models.BooleanField(default=True, verbose_name="Nouveaux messages"),
                ),
                (
                    "notify_system_updates",
                    models.BooleanField(
                        default=True, verbose_name="Mises à jour système"
                    ),
                ),
                (
                    "notify_security_alerts",
                    models.BooleanField(
                        default=True, verbose_name="Alertes de sécurité"
                    ),
                ),
                (
                    "allow_search_engines",
                    models.BooleanField(
                        default=True, verbose_name="Autoriser les moteurs de recherche"
                    ),
                ),
                (
                    "show_online_status",
                    models.BooleanField(
                        default=True, verbose_name="Afficher le statut en ligne"
                    ),
                ),
                (
                    "allow_friend_requests",
                    models.BooleanField(
                        default=True, verbose_name="Autoriser les demandes d'amitié"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_preferences",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Préférence utilisateur",
                "verbose_name_plural": "Préférences utilisateur",
                "db_table": "users_user_preference",
            },
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Connexion"),
                            ("logout", "Déconnexion"),
                            ("profile_update", "Mise à jour du profil"),
                            ("password_change", "Changement de mot de passe"),
                            ("2fa_enabled", "2FA activé"),
                            ("2fa_disabled", "2FA désactivé"),
                            ("email_verification", "Vérification email"),
                            ("account_created", "Compte créé"),
                            ("account_deleted", "Compte supprimé"),
                            ("security_alert", "Alerte de sécurité"),
                        ],
                        max_length=50,
                        verbose_name="Type d'activité",
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Adresse IP"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "device_info",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Informations du device"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_activities",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Activité utilisateur",
                "verbose_name_plural": "Activités utilisateur",
                "db_table": "users_user_activity",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserFollow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de suivi"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Suivi actif"),
                ),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur qui suit",
                    ),
                ),
                (
                    "following",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur suivi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Suivi d'utilisateur",
                "verbose_name_plural": "Suivis d'utilisateurs",
                "db_table": "users_user_follow",
                "indexes": [
                    models.Index(
                        fields=["follower", "is_active"],
                        name="users_user__followe_78e3b0_idx",
                    ),
                    models.Index(
                        fields=["following", "is_active"],
                        name="users_user__followi_2a4f4d_idx",
                    ),
                ],
                "unique_together": {("follower", "following")},
            },
        ),
        migrations.CreateModel(
            name="UserBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("spam", "Spam"),
                            ("harassment", "Harcèlement"),
                            ("inappropriate_content", "Contenu inapproprié"),
                            ("fake_account", "Compte factice"),
                            ("other", "Autre"),
                        ],
                        default="other",
                        max_length=100,
                        verbose_name="Raison du blocage",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, verbose_name="Description (optionnelle)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de blocage"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Blocage actif"),
                ),
                (
                    "blocked",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blocked_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur bloqué",
                    ),
                ),
                (
                    "blocker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blocked_users",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur qui bloque",
                    ),
                ),
            ],
            options={
                "verbose_name": "Blocage d'utilisateur",
                "verbose_name_plural": "Blocages d'utilisateurs",
                "db_table": "users_user_block",
                "indexes": [
                    models.Index(
                        fields=["blocker", "is_active"],
                        name="users_user__blocker_57783f_idx",
                    ),
                    models.Index(
                        fields=["blocked", "is_active"],
                        name="users_user__blocked_937017_idx",
                    ),
                ],
                "unique_together": {("blocker", "blocked")},
            },
        ),
    ]
