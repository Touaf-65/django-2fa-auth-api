# Generated by Django 4.2.24 on 2025-09-07 22:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nom du template"
                    ),
                ),
                ("subject", models.CharField(max_length=200, verbose_name="Sujet")),
                ("html_content", models.TextField(verbose_name="Contenu HTML")),
                (
                    "text_content",
                    models.TextField(blank=True, verbose_name="Contenu texte"),
                ),
                (
                    "from_email",
                    models.EmailField(
                        default="noreply@localhost",
                        max_length=254,
                        verbose_name="Email expéditeur",
                    ),
                ),
                (
                    "from_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom expéditeur"
                    ),
                ),
                (
                    "reply_to",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email de réponse"
                    ),
                ),
                (
                    "available_variables",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Variables disponibles"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Template email",
                "verbose_name_plural": "Templates email",
                "db_table": "notifications_email_template",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push"),
                            ("in_app", "In-App"),
                        ],
                        max_length=20,
                        verbose_name="Type de notification",
                    ),
                ),
                (
                    "subject",
                    models.CharField(blank=True, max_length=200, verbose_name="Sujet"),
                ),
                ("content", models.TextField(verbose_name="Contenu")),
                (
                    "html_content",
                    models.TextField(blank=True, verbose_name="Contenu HTML"),
                ),
                (
                    "recipient_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email destinataire"
                    ),
                ),
                (
                    "recipient_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Téléphone destinataire"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("sent", "Envoyé"),
                            ("delivered", "Livré"),
                            ("failed", "Échoué"),
                            ("cancelled", "Annulé"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Faible"),
                            ("normal", "Normal"),
                            ("high", "Élevé"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="Priorité",
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Planifié pour"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Envoyé le"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Livré le"
                    ),
                ),
                (
                    "context",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Variables utilisées pour le rendu du template",
                        verbose_name="Contexte",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Informations supplémentaires (ID externe, etc.)",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "retry_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Nombre de tentatives"
                    ),
                ),
                (
                    "max_retries",
                    models.PositiveIntegerField(
                        default=3,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Nombre maximum de tentatives",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "db_table": "notifications_notification",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nom du template"
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push"),
                            ("in_app", "In-App"),
                        ],
                        max_length=20,
                        verbose_name="Type de notification",
                    ),
                ),
                (
                    "subject",
                    models.CharField(blank=True, max_length=200, verbose_name="Sujet"),
                ),
                ("content", models.TextField(verbose_name="Contenu")),
                (
                    "html_content",
                    models.TextField(blank=True, verbose_name="Contenu HTML"),
                ),
                (
                    "available_variables",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Liste des variables disponibles dans le template",
                        verbose_name="Variables disponibles",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Faible"),
                            ("normal", "Normal"),
                            ("high", "Élevé"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="Priorité",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Template de notification",
                "verbose_name_plural": "Templates de notifications",
                "db_table": "notifications_notification_template",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SMSNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "to_phone",
                    models.CharField(
                        max_length=20, verbose_name="Numéro de téléphone destinataire"
                    ),
                ),
                ("message", models.TextField(max_length=1600, verbose_name="Message")),
                (
                    "twilio_sid",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="SID Twilio"
                    ),
                ),
                (
                    "twilio_status",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Statut Twilio"
                    ),
                ),
                (
                    "twilio_error_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Code d'erreur Twilio"
                    ),
                ),
                (
                    "twilio_error_message",
                    models.TextField(
                        blank=True, verbose_name="Message d'erreur Twilio"
                    ),
                ),
                (
                    "context",
                    models.JSONField(blank=True, default=dict, verbose_name="Contexte"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "notification",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sms_notification",
                        to="notifications.notification",
                        verbose_name="Notification",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification SMS",
                "verbose_name_plural": "Notifications SMS",
                "db_table": "notifications_sms_notification",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PushToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.TextField(verbose_name="Token push")),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("ios", "iOS"),
                            ("android", "Android"),
                            ("web", "Web"),
                        ],
                        max_length=20,
                        verbose_name="Type de device",
                    ),
                ),
                (
                    "device_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID du device"
                    ),
                ),
                (
                    "device_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom du device"
                    ),
                ),
                (
                    "app_version",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Version de l'app"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "last_used_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernière utilisation"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="push_tokens",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Token push",
                "verbose_name_plural": "Tokens push",
                "db_table": "notifications_push_token",
                "ordering": ["-created_at"],
                "unique_together": {("user", "token")},
            },
        ),
        migrations.CreateModel(
            name="PushNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="Titre")),
                (
                    "body",
                    models.TextField(max_length=200, verbose_name="Corps du message"),
                ),
                (
                    "data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Données JSON à envoyer avec la notification",
                        verbose_name="Données supplémentaires",
                    ),
                ),
                (
                    "sound",
                    models.CharField(
                        default="default", max_length=50, verbose_name="Son"
                    ),
                ),
                (
                    "badge",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Badge"
                    ),
                ),
                (
                    "fcm_message_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID message FCM"
                    ),
                ),
                (
                    "fcm_status",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Statut FCM"
                    ),
                ),
                (
                    "context",
                    models.JSONField(blank=True, default=dict, verbose_name="Contexte"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "notification",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="push_notification",
                        to="notifications.notification",
                        verbose_name="Notification",
                    ),
                ),
                (
                    "push_token",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notifications.pushtoken",
                        verbose_name="Token push",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification push",
                "verbose_name_plural": "Notifications push",
                "db_table": "notifications_push_notification",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("created", "Créée"),
                            ("sent", "Envoyée"),
                            ("delivered", "Livrée"),
                            ("failed", "Échouée"),
                            ("retry", "Nouvelle tentative"),
                            ("cancelled", "Annulée"),
                        ],
                        max_length=20,
                        verbose_name="Action",
                    ),
                ),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "details",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Informations supplémentaires (erreurs, métadonnées, etc.)",
                        verbose_name="Détails",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="notifications.notification",
                        verbose_name="Notification",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de notification",
                "verbose_name_plural": "Logs de notifications",
                "db_table": "notifications_notification_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="notification",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="notifications.notificationtemplate",
                verbose_name="Template",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Utilisateur",
            ),
        ),
        migrations.CreateModel(
            name="EmailNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "to_email",
                    models.EmailField(
                        max_length=254, verbose_name="Email destinataire"
                    ),
                ),
                (
                    "to_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom destinataire"
                    ),
                ),
                (
                    "from_email",
                    models.EmailField(
                        default="noreply@localhost",
                        max_length=254,
                        verbose_name="Email expéditeur",
                    ),
                ),
                (
                    "from_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom expéditeur"
                    ),
                ),
                (
                    "reply_to",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Email de réponse"
                    ),
                ),
                ("subject", models.CharField(max_length=200, verbose_name="Sujet")),
                ("html_content", models.TextField(verbose_name="Contenu HTML")),
                (
                    "text_content",
                    models.TextField(blank=True, verbose_name="Contenu texte"),
                ),
                (
                    "attachments",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Liste des fichiers à joindre",
                        verbose_name="Pièces jointes",
                    ),
                ),
                (
                    "sendgrid_message_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID message SendGrid"
                    ),
                ),
                (
                    "sendgrid_status",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Statut SendGrid"
                    ),
                ),
                (
                    "context",
                    models.JSONField(blank=True, default=dict, verbose_name="Contexte"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Date de dernière modification"
                    ),
                ),
                (
                    "notification",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_notification",
                        to="notifications.notification",
                        verbose_name="Notification",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="notifications.emailtemplate",
                        verbose_name="Template email",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification email",
                "verbose_name_plural": "Notifications email",
                "db_table": "notifications_email_notification",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["user", "status"], name="notificatio_user_id_7088ed_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["notification_type", "status"],
                name="notificatio_notific_a659f1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["scheduled_at"], name="notificatio_schedul_21ac35_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["created_at"], name="notificatio_created_46ad24_idx"
            ),
        ),
    ]
